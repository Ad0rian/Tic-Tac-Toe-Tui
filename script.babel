  function Square(props) {
      return (
        <button
          className={props.class}
          //insertar dato
          onClick={props.insertdata}>
          {props.value}
        </button>
      );
    
  }
  //Genera el tablero
  class Board extends React.Component {
    constructor(props) {
      super(props);
      this.state = {
        squaresclass:Array(16).fill("squarenull"),
        squares: Array(16).fill(null),
        xIsNext: true,
      };
    }

    clickIsMade(i){
      const squaresclass = this.state.squaresclass.slice();
      const squares = this.state.squares.slice();
      if (calculateWinner(squares) || squares[i]) {
        return;
      }
      squaresclass[i] = this.state.xIsNext ? "squareX" : "squareO";
      squares[i] = this.state.xIsNext ? 'X' : 'O';
      this.setState({
        squaresclass:squaresclass,
        squares: squares,
        xIsNext: !this.state.xIsNext,
      });
      if (this.state.xIsNext === true) {
        this.adversary(squares,squaresclass)
      }
    }
    
    renderSquare(i) {

      return (
        
      <Square
      class={this.state.squaresclass[i]}
      value={this.state.squares[i]}
      //donde estoy clicando
      insertdata={() => this.clickIsMade(i)}
      />
      );
      
    }
      adversary(squares,squaresclass){

        var chooseAdversary = Math.floor(Math.random() * (16 - 0));
        while (squares[chooseAdversary] === 'X' || squares[chooseAdversary] === 'O'){ 
          chooseAdversary = Math.floor(Math.random() * (16 - 0));
          console.log(chooseAdversary);
        }
        squaresclass[chooseAdversary] = this.state.xIsNext ? "squareO" : "squareX";
        squares[chooseAdversary] = this.state.xIsNext ? 'O' : 'X';
        console.log(this.state.squares[chooseAdversary]);
        console.log(chooseAdversary);

          this.setState({
          squaresclass:squaresclass,
          squares: squares,           
          xIsNext: true,
          });
      }
    
    render() {

      const winner = calculateWinner(this.state.squares);
      let status;
      if (winner) {
        status = 'Winner: ' + winner;
      } else {
        status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');
      }

      return (
        <div className="box">
          <div className="status">{status}</div>
          <div className="board-row">
            {this.renderSquare(0)}
            {this.renderSquare(1)}
            {this.renderSquare(2)}
            {this.renderSquare(3)}
          </div>
          <div className="board-row">
            {this.renderSquare(4)}
            {this.renderSquare(5)}
            {this.renderSquare(6)}
            {this.renderSquare(7)}
          </div>
          <div className="board-row">
            {this.renderSquare(8)}
            {this.renderSquare(9)}
            {this.renderSquare(10)}
            {this.renderSquare(11)}
          </div>
          <div className="board-row">
            {this.renderSquare(12)}
            {this.renderSquare(13)}
            {this.renderSquare(14)}
            {this.renderSquare(15)}
          </div>
        </div>
      );
    }
  }
  function calculateWinner(squares) {
    const lines = [
      [0, 1, 2, 3],
      [4, 5, 6, 7],
      [8, 9, 10, 11],
      [12, 13, 14, 15],
      [0, 4, 8, 12],
      [1, 5, 9, 13],
      [2, 6, 10, 14],
      [3, 7, 11, 15],
      [0, 5, 10, 15],
      [3, 6, 9, 12],
    ];
    for (let i = 0; i < lines.length; i++) {
      const [a, b, c, d] = lines[i];
      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c] && squares[b] === squares[d]) {
        return squares[a];
      }
    }
    return null;
  }
  class Game extends React.Component {
    render() {
      return (
        <div className="game">
          <div className="game-board">
            <Board />
          </div>
          <div className="game-info">
            <div>{}</div>
            <ol>{}</ol>
          </div>
        </div>
      );
    }
  }
  
  // ========================================
  
  ReactDOM.render(
    <Game />,
    document.getElementById('root')
  );
  
  